name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v3

      - name: Set PRIVATE_KEY
        run: |
          mkdir -p ./src/main/resources/key
          echo "${{secrets.SSH_PRIVATE_KEY}}" | base64 --decode > ./src/main/resources/key/LawingKey.pem
          chmod 600 ./src/main/resources/key/LawingKey.pem
        shell: bash


      #1. SSH Tunneling 설정
      - name: Start SSH Tunnel
        run: |
          ssh -i ./src/main/resources/key/LawingKey.pem -L 3307:"${{secrets.DB_END_POINT}}":3306 ec2-user@15.164.148.174

      #2. Java 17 세팅
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

      #3. YML File Build
      - name: Set jwt YML
        run: |
          touch ./src/main/resources/application-jwt.yml
          echo "${{secrets.APPLICATION_JWT_YML}}" | base64 --decode > src/main/resources/application-jwt.yml
        shell: bash

      - name: Set codef YML
        run: |
          touch ./src/main/resources/application-codef.yml
          echo "${{secrets.APPLICATION_CODEF_YML}}" | base64 --decode > src/main/resources/application-codef.yml
        shell: bash

      - name: Set real YML
        run: |
          touch ./src/main/resources/application-real.yml
          echo "${{secrets.APPLICATION_REAL_YML}}" | base64 --decode > src/main/resources/application-real.yml
        shell: bash

      - name: Check if YML files exist
        run: |
          if [ -f ./src/main/resources/application-jwt.yml ] && \
             [ -f ./src/main/resources/application-codef.yml ] && \
             [ -f ./src/main/resources/application-real.yml ]; then
            echo "YML files exist."
          else
            echo "One or more YML files are missing."
            exit 1
          fi

      # 4. Spring Boot Applications Build
      - name: Build with Gradle
        run: |
          chmod +x gradlew 
          ./gradlew build --stacktrace --info

      # 5. 빌드 결과 확인
      - name: Verify build
        run: ls -l build/libs

      #6. Docker 이미지 빌드
      - name: docker image build
        run: docker build -t chaniiiii/lawing --platform linux/amd64 .

      # 7. DockerHub 로그인
      - name: docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER_NAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # 8. Docker Hub 이미지 푸시
      - name: docker Hub push
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/chaeniiiii/lawing
