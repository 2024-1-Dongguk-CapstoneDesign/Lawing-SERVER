name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      #1. Java 17 세팅
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      #2. YML File Build
      - name: Set jwt YML
        run: |
          touch ./src/main/resources/application-jwt.yml
          echo "${{ secrets.APPLICATION_JWT_YML }}" | base64 --decode > src/main/resources/application-jwt.yml

      - name: Set codef YML
        run: |
          touch ./src/main/resources/application-codef.yml
          echo "${{ secrets.APPLICATION_CODEF_YML }}" | base64 --decode > src/main/resources/application-codef.yml

      - name: Set real YML
        run: |
          touch ./src/main/resources/application-real.yml
          echo "${{ secrets.APPLICATION_REAL_YML }}" | base64 --decode > src/main/resources/application-real.yml    

      - name: Set dev YML
        run: |
          touch ./src/main/resources/application-dev.yml
          echo "${{ secrets.APPLICATION_DEV_YML }}" | base64 --decode > src/main/resources/application-dev.yml    

      # 3. Spring Boot Applications Build
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

      - name:  Build with Gradle Wrapper
        run : ./gradlew build

      #4. Docker 이미지 빌드
      - name: docker image build
        run: docker build -t chaniiiii/lawing --platform linux/amd64 .

      # 5. DockerHub 로그인
      - name: docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER_NAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # 6. Docker Hub 이미지 푸시
      - name: docker Hub push
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/chaeniiiii/lawing
